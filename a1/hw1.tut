% -------------------------------------------------------------
% HOMEWORK 1  --- due Jan 28 1:05pm (beginning of class)
% ------------------------------------------------------------
%
% ------------------------------------------------------------
% Q1 : Prove the following statements (26 points)

proof easy0 : (A & (B & C)) => (A & B) =
begin
[ (A & (B & C));
  A;
  B & C;
  B;
  A & B ];
(A & (B & C)) => (A & B)
end;
term easy0 : (A & (B & C)) => (A & B) =
  fn x => ((fst x), (fst (snd x)));
proof easy1 :  (A => B) => ((B => C) => (A => C)) =
begin
[ A => B;
  [ B => C;
    [ A;
      B;
      C ];
    A => C ];
  (B => C) => (A => C)];
(A => B) => ((B => C) => (A => C))
end;
term easy1 :  (A => B) => ((B => C) => (A => C)) =
  fn x => fn y => fn a => ((y) ((x) a)) ;
annotated proof d1a : ((A | B) => C) => (A => C) & (B => C) =
begin
[ x : (A | B) => C;
  [ a : A;
    inl a : A | B;
    (x) (inl a) : C ];
  fn a => (x) (inl a) : A => C;
  [ b : B;
    inr b : A | B;
    (x) (inr b) : C ];
  fn b => (x) (inr b) : B => C;
  (fn a => (x) (inl a), fn b => (x) (inr b)) : (A => C) & (B => C) ];
fn x => (fn a => (x) (inl a), fn b => (x) (inr b)) : ((A | B) => C) => (A => C) & (B => C)
end;
annotated proof d1b : (A => C) & (B => C) => (A | B) => C =
begin
[ x : (A => C) & (B => C);
  fst x : A => C;
  snd x : B => C;
  [ y : A | B;
    [ a : A;
      (fst x) a : C ];
    [ b : B;
      (snd x) b : C ];
    case y of inl a => (fst x) a | inr b => (snd x) b end : C ];
  fn y => (case y of inl a => (fst x) a | inr b => (snd x) b end) : (A | B) => C ];
fn x => (fn y => (case y of inl a => (fst x) a | inr b => (snd x) b end)) : (A => C) & (B => C) => (A | B) => C
end;
proof d1c : ((A => B) & (A | C)) => (B | C) =
begin
[ (A => B) & (A | C);
  A => B;
  A | C;
  [ A;         % A => B | C
    B;
    B | C ];
  [ C;         % C => B | C
    B | C ];
  B | C];
((A => B) & (A | C)) => (B | C)
end;
term d1c : ((A => B) & (A | C)) => (B | C) =
  fn x => case (snd x) of inl a => (inl ((fst x) a)) | inr c => inr c end;
% OPTIONAL
proof easy2 : (A | (B & C)) => ((A | B) & (A | C)) =
begin
[ A | (B & C);
  [ A;
    A | B;
	A | C;
	(A | B) & (A | C) ];
  [ B & C;
    B;
    C;
    A | B;
	A | C;
	(A | B) & (A | C) ];
  (A | B) & (A | C) ];
(A | (B & C)) => ((A | B) & (A | C))
end;
%{proof d1d : (A => ~ A) => (~ A) =
begin
[ A => ~ A;
  [ A;
    ~ A ];
  ~ A ];
(A => ~ A) => (~ A)
end;
}%
% ------------------------------------------------------------
% Q2 : De Morgan's Laws

proof q1a  : (~A | ~B) => ~(A & B) =
begin
[ ~A | ~B;
  [ ~A;
    [ A & B;
	  A;
	  F ];
    ~(A & B) ];
  [ ~B;
    [ A & B;
	  B;
	  F ];
    ~(A & B) ];
  ~(A & B) ];
(~A | ~B) => ~(A & B)
end;
proof q1b : ~A & ~B => ~(A | B) =
begin
[ ~A & ~B;
  ~A;
  ~B;
  [ A | B;
    [ A;
      F ];
    [ B;
      F ];
    F ];
  ~(A | B) ];
~A & ~B => ~(A | B)
end;
proof q1c : ~(A | B) => ~A & ~B =
begin
[ ~(A | B);
  [ A;
    A | B;
    F ];
  ~A;
  [ B;
    A | B;
    F ];
  ~B;
  ~A & ~B ];
~(A | B) => ~A & ~B
end;
classical proof q1d : ~(A & B) => (~A | ~B) =
begin
[ ~(A & B);      %          (A & B)   |- F
  [ ~ (~A | ~B); % Assuming (~A | ~B) |- F
    [ ~A;
      ~A | ~B;
      F ];
    A;
    [ ~B;
      ~A | ~B;
      F ];
    B;
    A & B;
    F ]; % Contradiction
  (~A | ~B) ];
~(A & B) => (~A | ~B)
end;
classical proof excluded_middle : A | ~A = 
begin
[ ~(A | ~A);
  [ A; % If A is true
    A | ~A;
    F ]; % contradiction!
  ~A; % therefore A must be false
  A | ~A;
  F ]; % another contradiction!
A | ~A % proof by contradiction
end;
proof q1e : (~ ~ ~ A => ~ A) =
begin
[ ~ ~ ~ A;
  [ A;
    [ ~ A;
      A;
      F ];
    ~ ~ A;
    F ];
  ~ A ];
(~ ~ ~ A => ~ A)
end;


% ------------------------------------------------------------
% Q3 : On paper -- 
% ------------------------------------------------------------

